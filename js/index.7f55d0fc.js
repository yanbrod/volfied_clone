(()=>{"use strict";var t={},i={};function e(s){var h=i[s];if(void 0!==h)return h.exports;var r=i[s]={exports:{}};return t[s](r,r.exports,e),r.exports}function s(t,i,e){return i in t?Object.defineProperty(t,i,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[i]=e,t}e.rv=function(){return"1.0.5"},e.ruid="bundler=rspack@1.0.5";class h{keyDownHandler(t){"ArrowLeft"===t.key?this.keysPressed.LEFT=!0:"ArrowRight"===t.key?this.keysPressed.RIGHT=!0:"ArrowUp"===t.key?this.keysPressed.UP=!0:"ArrowDown"===t.key&&(this.keysPressed.DOWN=!0)}keyUpHandler(t){"ArrowLeft"===t.key?this.keysPressed.LEFT=!1:"ArrowRight"===t.key?this.keysPressed.RIGHT=!1:"ArrowUp"===t.key?this.keysPressed.UP=!1:"ArrowDown"===t.key&&(this.keysPressed.DOWN=!1)}setupMobileControls(){let t=document.getElementById("leftButton"),i=document.getElementById("rightButton"),e=document.getElementById("upButton"),s=document.getElementById("downButton");t.addEventListener("touchstart",()=>{this.keysPressed.LEFT=!0}),t.addEventListener("touchend",()=>{this.keysPressed.LEFT=!1}),i.addEventListener("touchstart",()=>{this.keysPressed.RIGHT=!0}),i.addEventListener("touchend",()=>{this.keysPressed.RIGHT=!1}),e.addEventListener("touchstart",()=>{this.keysPressed.UP=!0}),e.addEventListener("touchend",()=>{this.keysPressed.UP=!1}),s.addEventListener("touchstart",()=>{this.keysPressed.DOWN=!0}),s.addEventListener("touchend",()=>{this.keysPressed.DOWN=!1}),[t,i,e,s].forEach(t=>{t.addEventListener("touchstart",t=>t.preventDefault()),t.addEventListener("touchend",t=>t.preventDefault())})}constructor(){s(this,"keysPressed",{LEFT:!1,RIGHT:!1,UP:!1,DOWN:!1}),document.addEventListener("keydown",this.keyDownHandler.bind(this)),document.addEventListener("keyup",this.keyUpHandler.bind(this)),this.setupMobileControls()}}class r{resetPosition(){this.position={x:4*Math.floor(this.canvasWidth/2/4),y:this.canvasHeight-4},this.trail=[],this.drawing=!1}move(t){this.position.x+=t.x*this.speed,this.position.y+=t.y*this.speed}constructor(t,i){s(this,"position",void 0),s(this,"speed",4),s(this,"trail",[]),s(this,"drawing",!1),s(this,"canvasWidth",void 0),s(this,"canvasHeight",void 0),this.canvasWidth=t,this.canvasHeight=i,this.resetPosition()}}class d{move(t,i,e){let s=this.pos.x,h=this.pos.y,r=this.dir.x,d=this.dir.y;.1>Math.random()&&(r=Math.floor(3*Math.random())-1,d=Math.floor(3*Math.random())-1,0===r&&0===d&&(r=1),this.dir.x=r,this.dir.y=d);let o=s+r,a=h+d;o<0||o>=t||a<0||a>=i||1===e[a*t+o]?(r=Math.floor(3*Math.random())-1,d=Math.floor(3*Math.random())-1,0===r&&0===d&&(r=1),this.dir.x=r,this.dir.y=d):(this.pos.x=o,this.pos.y=a)}constructor(t,i){s(this,"pos",void 0),s(this,"dir",void 0),this.pos={x:t,y:i},this.dir={x:.5>Math.random()?-1:1,y:.5>Math.random()?-1:1}}}function o(t,i,e){return i*e+t}class a{initializeBorders(){var t,i,e,s;for(let s=0;s<this.gridWidth;s++){;this.grid[t=s,0*this.gridWidth+t]=1,this.grid[i=s,e=this.gridHeight-1,e*this.gridWidth+i]=1}for(let t=0;t<this.gridHeight;t++){;this.grid[t*this.gridWidth+0]=1,this.grid[s=this.gridWidth-1,t*this.gridWidth+s]=1}}performFloodFill(t,i){var e,s;for(let i of t){;let t=Math.floor(i.x/4),s=Math.floor(i.y/4);this.grid[e=t,s*this.gridWidth+e]=1}let h=new Uint8Array(this.grid.length),r=[],d=[{dx:-1,dy:0},{dx:1,dy:0},{dx:0,dy:-1},{dx:0,dy:1}],o=(t,i)=>{var e;let s=(e=t,i*this.gridWidth+e);0===this.grid[s]&&0===h[s]&&(r.push({x:t,y:i}),h[s]=1)};for(let t=0;t<this.gridWidth;t++)o(t,0),o(t,this.gridHeight-1);for(let t=0;t<this.gridHeight;t++)o(0,t),o(this.gridWidth-1,t);for(let t of i)o(t.pos.x,t.pos.y);for(;r.length>0;){;let{x:t,y:i}=r.pop();let e=(s=t,i*this.gridWidth+s);for(let s of(this.grid[e]=2,d)){let e=t+s.dx,h=i+s.dy;e>=0&&e<this.gridWidth&&h>=0&&h<this.gridHeight&&o(e,h)}}for(let t=0;t<this.grid.length;t++)0===this.grid[t]?this.grid[t]=1:2===this.grid[t]&&(this.grid[t]=0);return i=i.filter(t=>{var i,e;let s=(i=t.pos.x,e=t.pos.y,e*this.gridWidth+i);return 1!==this.grid[s]})}calculateClaimedPercentage(){let t=this.gridWidth*this.gridHeight,i=0;for(let t=0;t<this.grid.length;t++)1===this.grid[t]&&i++;let e=2*this.gridWidth+(this.gridHeight-2)*2,s=i-e;return s/(t-e)*100}constructor(t,i){s(this,"grid",void 0),s(this,"gridWidth",void 0),s(this,"gridHeight",void 0),this.gridWidth=t,this.gridHeight=i,this.grid=new Uint8Array(this.gridWidth*this.gridHeight),this.initializeBorders()}}class n{draw(t,i,e){let s=this.canvas.width,h=this.canvas.height,r=this.grid.gridWidth;this.grid.gridHeight,this.ctx.clearRect(0,0,s,h);let d=document.createElement("canvas");d.width=s,d.height=h;let o=d.getContext("2d"),a=o.createImageData(s,h),n=a.data,l={r:0,g:0,b:255,a:255},g=this.grid.grid.length;n.fill(0);for(let t=0;t<g;t++)if(1===this.grid.grid[t]){let i=t%r*4,e=4*Math.floor(t/r);for(let t=0;t<4;t++)for(let h=0;h<4;h++){let r=((e+h)*s+(i+t))*4;n[r]=l.r,n[r+1]=l.g,n[r+2]=l.b,n[r+3]=l.a}}if(o.putImageData(a,0,0),this.ctx.drawImage(d,0,0),e.length>0){this.ctx.strokeStyle="#00FF00",this.ctx.lineWidth=2,this.ctx.beginPath(),this.ctx.moveTo(e[0].x,e[0].y);for(let t=1;t<e.length;t++)this.ctx.lineTo(e[t].x,e[t].y);this.ctx.lineTo(this.player.position.x,this.player.position.y),this.ctx.stroke()}for(let t of(this.ctx.fillStyle="#FFFFFF",this.ctx.fillRect(this.player.position.x,this.player.position.y,4,4),this.enemies))this.ctx.fillStyle="#FF0000",this.ctx.fillRect(4*t.pos.x,4*t.pos.y,4,4);this.ctx.fillStyle="#FFFFFF",this.ctx.font=`${s/500*24}px Arial`,this.ctx.fillText(`Lives: ${i}`,10,h/500*30),this.ctx.fillText(`Claimed: ${t.toFixed(1)}%`,10,h/500*60)}constructor(t,i,e,h,r){s(this,"ctx",void 0),s(this,"canvas",void 0),s(this,"grid",void 0),s(this,"player",void 0),s(this,"enemies",void 0),this.canvas=t,this.ctx=i,this.grid=e,this.player=h,this.enemies=r}}class l{initializeEnemies(){this.enemies=[];for(let t=0;t<3;t++)this.enemies.push(new d(Math.floor(Math.random()*(this.grid.gridWidth-2))+1,Math.floor(Math.random()*(this.grid.gridHeight-2))+1))}start(){requestAnimationFrame(this.gameLoop)}gameLoop(t){if(t-this.lastTimestamp>=this.frameDuration){this.lastTimestamp=t,this.update();let i=this.grid.calculateClaimedPercentage();this.renderer.draw(i,this.lives,this.trail)}this.lives>0&&!this.gameWon?requestAnimationFrame(this.gameLoop):this.gameWon?(this.ctx.fillStyle="#FFFFFF",this.ctx.font="48px Arial",this.ctx.fillText("You Win!",this.canvas.width/2-100,this.canvas.height/2)):(this.ctx.fillStyle="#FFFFFF",this.ctx.font="48px Arial",this.ctx.fillText("Game Over",this.canvas.width/2-100,this.canvas.height/2))}update(){let t=this.inputHandler.keysPressed,i=0,e=0;if(t.LEFT&&(i=-1),t.RIGHT&&(i=1),t.UP&&(e=-1),t.DOWN&&(e=1),0!==i||0!==e){var s;0!==i&&0!==e&&(e=0);let t={x:this.player.position.x+i*this.player.speed,y:this.player.position.y+e*this.player.speed},h=Math.floor(t.x/4),r=Math.floor(t.y/4);let d=(s=h,r*this.grid.gridWidth+s),o=this.grid.grid[this.prevGridIndex];h>=0&&h<this.grid.gridWidth&&r>=0&&r<this.grid.gridHeight&&(1===this.grid.grid[d]?(this.drawing&&(this.drawing=!1,this.enemies=this.grid.performFloodFill(this.trail,this.enemies),this.trail=[],this.grid.calculateClaimedPercentage()>=75&&(this.gameWon=!0)),this.player.position=t):(!this.drawing&&1===o&&(this.drawing=!0,this.trail=[{x:this.player.position.x,y:this.player.position.y}]),this.player.position=t,this.drawing&&this.trail.push({x:this.player.position.x,y:this.player.position.y})),this.prevGridIndex=d)}for(let t=this.enemies.length-1;t>=0;t--){let i=this.enemies[t];i.move(this.grid.gridWidth,this.grid.gridHeight,this.grid.grid);let e=Math.floor(this.player.position.x/4),s=Math.floor(this.player.position.y/4);if(i.pos.x===e&&i.pos.y===s&&this.loseLife(),this.drawing)for(let t of this.trail){let e=Math.floor(t.x/4),s=Math.floor(t.y/4);if(i.pos.x===e&&i.pos.y===s){this.loseLife();break}}}}loseLife(){var t,i;this.lives-=1,this.player.resetPosition(),this.drawing=!1,this.trail=[],this.inputHandler.keysPressed.LEFT=!1,this.inputHandler.keysPressed.RIGHT=!1,this.inputHandler.keysPressed.UP=!1,this.inputHandler.keysPressed.DOWN=!1,this.prevGridIndex=(t=Math.floor(this.player.position.x/4),i=Math.floor(this.player.position.y/4),i*this.grid.gridWidth+t)}constructor(t,i){var e,d;s(this,"canvas",void 0),s(this,"ctx",void 0),s(this,"inputHandler",void 0),s(this,"player",void 0),s(this,"enemies",void 0),s(this,"grid",void 0),s(this,"renderer",void 0),s(this,"lives",3),s(this,"gameWon",!1),s(this,"lastTimestamp",0),s(this,"desiredFPS",30),s(this,"frameDuration",1e3/this.desiredFPS),s(this,"prevGridIndex",void 0),s(this,"trail",[]),s(this,"drawing",!1),this.canvas=t,this.ctx=i,this.inputHandler=new h,this.player=new r(this.canvas.width,this.canvas.height),this.grid=new a(Math.floor(this.canvas.width/4),Math.floor(this.canvas.height/4)),this.initializeEnemies(),this.renderer=new n(this.canvas,this.ctx,this.grid,this.player,this.enemies),this.prevGridIndex=(e=Math.floor(this.player.position.x/4),d=Math.floor(this.player.position.y/4),d*this.grid.gridWidth+e),this.gameLoop=this.gameLoop.bind(this)}}let g=document.getElementById("gameCanvas"),p=g.getContext("2d");function c(){new l(g,p).start()}function y(){let{width:t,height:i}=g.getBoundingClientRect();g.width=t,g.height=i,c()}window.addEventListener("resize",y),y(),c()})();